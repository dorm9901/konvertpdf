import os
import requests
from github import Github

def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è GitHub Actions
        github_token = os.environ['GITHUB_TOKEN']
        convertapi_secret = os.environ['CONVERTAPI_SECRET']
        repo_name = os.environ['GITHUB_REPOSITORY']
        issue_number = int(os.environ['ISSUE_NUMBER'])

        print(f"üöÄ Starting conversion for issue #{issue_number}")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub API
        g = Github(github_token)
        repo = g.get_repo(repo_name)
        issue = repo.get_issue(number=issue_number)

        # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ –Ω–∞—á–∞–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        issue.create_comment("üîÑ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é PDF –≤ Word...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–µ—Ç–∫–∞ convert
        labels = [label.name for label in issue.labels]
        if 'convert' not in labels:
            error_msg = "‚ùå Issue doesn't have 'convert' label. Please add the 'convert' label to this issue."
            issue.create_comment(error_msg)
            print(error_msg)
            return

        # –ò—â–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ (—ç—Ç–æ —Å–ª–æ–∂–Ω–∞—è —á–∞—Å—Ç—å —Å GitHub API)
        comments = issue.get_comments()
        pdf_found = False

        for comment in comments:
            if 'PDF file attached' in comment.body:
                pdf_found = True
                # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–ª–æ–∂–µ–Ω–∏—è
                break

        if not pdf_found:
            issue.create_comment("‚ùå No PDF file found. Please attach a PDF file to the issue comments.")
            print("No PDF file found in comments")
            return

        # –ó–î–ï–°–¨ –ë–£–î–ï–¢ –ö–û–î –î–õ–Ø –†–ê–ë–û–¢–´ –° ConvertAPI
        # –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
        print("‚úÖ Conversion simulation completed successfully")
        issue.create_comment("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! (–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n\n"
                           "‚ö†Ô∏è –†–µ–∞–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —á–µ—Ä–µ–∑ ConvertAPI –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.")

    except Exception as e:
        error_msg = f"‚ùå Critical error: {str(e)}"
        print(error_msg)
        # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–± –æ—à–∏–±–∫–µ –≤ issue
        try:
            issue.create_comment(error_msg)
        except:
            pass

if __name__ == '__main__':
    main()
